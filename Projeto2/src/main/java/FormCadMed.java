import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Victor
 */
public class FormCadMed extends javax.swing.JFrame {
    private Medico med1 = new Medico();
    private GerMed gm = GerMed.geraGerMed();
    private static FormCadMed cadMedUnic;
    

    //Singleton
    public static FormCadMed geraCadMed(){
        if(cadMedUnic == null) {
            cadMedUnic = new FormCadMed();
        }
        return cadMedUnic;
    }
    
    private FormCadMed() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cxMedNome = new javax.swing.JTextField();
        rotNome = new javax.swing.JLabel();
        rotCpf = new javax.swing.JLabel();
        rotCrm = new javax.swing.JLabel();
        rotEspec = new javax.swing.JLabel();
        btInserirMed = new javax.swing.JButton();
        cxMedCpf = new javax.swing.JTextField();
        cxMedCrm = new javax.swing.JTextField();
        cxMedEspec = new javax.swing.JTextField();
        btLimpar = new javax.swing.JButton();
        btExcluirMed = new javax.swing.JButton();
        btAlterarMed = new javax.swing.JButton();
        rotMedIdade = new javax.swing.JLabel();
        rotMedSexo = new javax.swing.JLabel();
        cxMedIdade = new javax.swing.JTextField();
        cxMedSexo = new javax.swing.JTextField();
        btConsMed = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMed = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Médicos");

        cxMedNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxMedNomeActionPerformed(evt);
            }
        });

        rotNome.setText("Nome");

        rotCpf.setText("CPF");

        rotCrm.setText("CRM");

        rotEspec.setText("Especialização");

        btInserirMed.setText("Inserir");
        btInserirMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInserirMedActionPerformed(evt);
            }
        });

        cxMedCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxMedCpfActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btExcluirMed.setText("Excluir por CRM");
        btExcluirMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirMedActionPerformed(evt);
            }
        });

        btAlterarMed.setText("Alterar por CRM");
        btAlterarMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarMedActionPerformed(evt);
            }
        });

        rotMedIdade.setText("Idade");

        rotMedSexo.setText("Sexo");

        btConsMed.setText("Consultar por CRM");
        btConsMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsMedActionPerformed(evt);
            }
        });

        tbMed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "CPF", "CRM", "Idade", "Especialização", "Sexo"
            }
        ));
        tbMed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMedMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMed);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rotCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rotNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cxMedNome, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                    .addComponent(cxMedCpf)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rotMedSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cxMedSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rotMedIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cxMedIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btConsMed))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rotCrm, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cxMedCrm, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rotEspec)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cxMedEspec, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btLimpar)
                                .addGap(18, 18, 18)
                                .addComponent(btAlterarMed))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btInserirMed)
                                .addGap(18, 18, 18)
                                .addComponent(btExcluirMed)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotNome)
                    .addComponent(cxMedNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotCpf)
                    .addComponent(cxMedCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotCrm)
                    .addComponent(cxMedCrm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotEspec)
                    .addComponent(cxMedEspec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotMedIdade)
                    .addComponent(cxMedIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotMedSexo)
                    .addComponent(cxMedSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btInserirMed)
                    .addComponent(btExcluirMed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLimpar)
                    .addComponent(btAlterarMed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btConsMed))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cxMedNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxMedNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxMedNomeActionPerformed

    private void btInserirMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInserirMedActionPerformed
        inserirMed();
        popularTbMed();
    }//GEN-LAST:event_btInserirMedActionPerformed

    private void cxMedCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxMedCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxMedCpfActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btExcluirMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirMedActionPerformed
        ExcluirMed();
        popularTbMed();
    }//GEN-LAST:event_btExcluirMedActionPerformed

    private void btAlterarMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarMedActionPerformed
        AlterarMed();
        popularTbMed();
    }//GEN-LAST:event_btAlterarMedActionPerformed

    private void btConsMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsMedActionPerformed
        consMedCrm();
    }//GEN-LAST:event_btConsMedActionPerformed

    private void tbMedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMedMouseClicked
        selectTbMed();
    }//GEN-LAST:event_tbMedMouseClicked
    
    public void selectTbMed(){
        String valLin = "";
        
        int posLin = tbMed.getSelectedRow();
        
        for(int col = 0; col < tbMed.getColumnCount(); col++){
            valLin += tbMed.getModel().getValueAt(posLin, col).toString();
            
            if(col+1< tbMed.getColumnCount()){
                valLin += " - ";
            }
        }
        
        JOptionPane.showMessageDialog(
                null,
                "Valor da linha "+posLin+ " é "+valLin,
                "Saida de Dados",
                JOptionPane.INFORMATION_MESSAGE
        );
        
    }

    

    public void popularTbMed(){
        DefaultTableModel modelo = (DefaultTableModel) tbMed.getModel();
        
        int posLin = 0;
        modelo.setRowCount(posLin);
        
        for(Medico med: gm.getBdMed()){
            modelo.insertRow(posLin, new Object[]{med.getNome(), med.getCpf(),
                med.getCrm(),med.getIdade(),med.getEspec(),med.getSexo()});
            posLin++;
        }
    }
    
    public void consMedCrm(){
        med1 = new Medico();
        med1.setCrm(Integer.parseInt(cxMedCrm.getText()));
        
        med1 = gm.consMedCrm(med1);
        
        if(med1 != null) {
            cxMedCpf.setText(Integer.toString(med1.getCpf()));
            cxMedCrm.setText(Integer.toString(med1.getCrm()));
            cxMedIdade.setText(Integer.toString(med1.getIdade()));
            cxMedNome.setText(med1.getNome());
            cxMedEspec.setText(med1.getEspec());
            cxMedSexo.setText(med1.getSexo());
            
            JOptionPane.showMessageDialog(
                    null,
                    "Médico encontrado, Verifique os dados",
                    "Consulta de Médicos",
                    JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Médico nao encontrado",
                    "Consulta de Médicos",
                    JOptionPane.ERROR_MESSAGE
            );
            limpar();
                    
        }
        
    }
    
    public void AlterarMed(){
        med1 = new Medico();
        med1.setCrm(Integer.parseInt(cxMedCrm.getText()));
        med1 = gm.atualizaMedCrm(med1);
        
        if(med1 != null) {
            cxMedCrm.setText(Integer.toString(med1.getCrm()));
            cxMedCpf.setText(Integer.toString(med1.getCpf()));
            cxMedIdade.setText(Integer.toString(med1.getIdade()));
            cxMedNome.setText(med1.getNome());
            cxMedEspec.setText(med1.getEspec());
            cxMedSexo.setText(med1.getSexo());
            JOptionPane.showMessageDialog( 
                null,
                "Medico alterado com sucesso",
                "Alteração de Medicos",
                JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                null,
                "Erro ao alterar Medico, cheque os dados",
                "Alteração de Médico",
                JOptionPane.ERROR_MESSAGE
            );
        }
        limpar();
    }
    
    public void ExcluirMed(){
        med1 = new Medico();
        med1.setCrm(Integer.parseInt(cxMedCrm.getText()));
        
        med1 = gm.delMedCrm(med1);
        if(med1 == null) {
            JOptionPane.showMessageDialog(
                null,
                "Medico excluido com sucesso",
                "Exclusao de Médicos",
                JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                null,
                "Erro ao excluir o Médico",
                "Exclisao de Medicos",
                JOptionPane.ERROR_MESSAGE
            );
        }
        limpar();
    }
    
    
    public void inserirMed(){
        med1 = new Medico();
        med1.setNome(cxMedNome.getText());
        med1.setCpf(Integer.parseInt(cxMedCpf.getText()));
        med1.setCrm(Integer.parseInt(cxMedCrm.getText()));
        med1.setEspec(cxMedEspec.getText());
        med1.setIdade(Integer.parseInt(cxMedIdade.getText()));
        med1.setSexo(cxMedSexo.getText());
        
        med1 = gm.insMed(med1);
        
        if(med1 != null){
            JOptionPane.showMessageDialog(
                null,
                "Medico cadastrado com SUCESSO",
                "Cadastro De Medicos",
                3
            );
        } else {
            JOptionPane.showMessageDialog(
                null,
                "Erro ao cadastrar, Verifique os dados",
                "Cadastro de Medicos",
                JOptionPane.ERROR_MESSAGE
                );
        }
        limpar();
        
    }
    
    public void limpar(){
        cxMedCpf.setText("");
        cxMedNome.setText("");
        cxMedCrm.setText("");
        cxMedEspec.setText("");
        cxMedSexo.setText("");
        cxMedIdade.setText("");
        cxMedNome.requestFocus();
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterarMed;
    private javax.swing.JButton btConsMed;
    private javax.swing.JButton btExcluirMed;
    private javax.swing.JButton btInserirMed;
    private javax.swing.JButton btLimpar;
    private javax.swing.JTextField cxMedCpf;
    private javax.swing.JTextField cxMedCrm;
    private javax.swing.JTextField cxMedEspec;
    private javax.swing.JTextField cxMedIdade;
    private javax.swing.JTextField cxMedNome;
    private javax.swing.JTextField cxMedSexo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rotCpf;
    private javax.swing.JLabel rotCrm;
    private javax.swing.JLabel rotEspec;
    private javax.swing.JLabel rotMedIdade;
    private javax.swing.JLabel rotMedSexo;
    private javax.swing.JLabel rotNome;
    private javax.swing.JTable tbMed;
    // End of variables declaration//GEN-END:variables
}
