import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class FormCadPac extends javax.swing.JFrame {
    
    private Paciente pac1 = new Paciente();
    private GerPac gp = GerPac.gerGerPac();
    private static FormCadPac cadPacUnic;
    
    
    
    private FormCadPac() {
        initComponents();
    }
    
    // Singleton
    public static FormCadPac geraCadPac() {
        if(cadPacUnic == null) {
            cadPacUnic = new FormCadPac();
        }
        return cadPacUnic;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rotPacNome = new javax.swing.JLabel();
        cxPacNome = new javax.swing.JTextField();
        rotPacCpf = new javax.swing.JLabel();
        cxPacCpf = new javax.swing.JTextField();
        rotPacSexo = new javax.swing.JLabel();
        cxPacSexo = new javax.swing.JTextField();
        rotPacIdade = new javax.swing.JLabel();
        cxPacIdade = new javax.swing.JTextField();
        rotPacTipoSang = new javax.swing.JLabel();
        cxPacTipoSang = new javax.swing.JTextField();
        rotPacQuarto = new javax.swing.JLabel();
        cxPacQuarto = new javax.swing.JTextField();
        btPacInserir = new javax.swing.JButton();
        btDelPac = new javax.swing.JButton();
        btAltPac = new javax.swing.JButton();
        brConsPac = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPac = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        rotPacNome.setText("Nome");

        rotPacCpf.setText("CPF");

        rotPacSexo.setText("Sexo");

        rotPacIdade.setText("Idade");

        rotPacTipoSang.setText("Tipo Sanguineo");

        rotPacQuarto.setText("Quarto");

        btPacInserir.setText("Inserir");
        btPacInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPacInserirActionPerformed(evt);
            }
        });

        btDelPac.setText("Deletar Paciente por CPF");
        btDelPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDelPacActionPerformed(evt);
            }
        });

        btAltPac.setText("Alterar por CPF");
        btAltPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAltPacActionPerformed(evt);
            }
        });

        brConsPac.setText("Consulta por CPF");
        brConsPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brConsPacActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        tbPac.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "CPF", "Quarto", "Idade", "Tipo Sanguineo", "Sexo"
            }
        ));
        tbPac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPacMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPac);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btPacInserir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(brConsPac))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rotPacQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cxPacQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(rotPacIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rotPacSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rotPacCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rotPacNome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cxPacNome, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cxPacCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cxPacSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cxPacIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rotPacTipoSang)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cxPacTipoSang, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btDelPac))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btAltPac)
                .addGap(18, 18, 18)
                .addComponent(btLimpar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rotPacNome)
                            .addComponent(cxPacNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rotPacCpf)
                            .addComponent(cxPacCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rotPacSexo)
                            .addComponent(cxPacSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rotPacIdade)
                            .addComponent(cxPacIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rotPacTipoSang)
                            .addComponent(cxPacTipoSang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rotPacQuarto)
                            .addComponent(cxPacQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btPacInserir)
                            .addComponent(brConsPac))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDelPac)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAltPac)
                            .addComponent(btLimpar))))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btPacInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPacInserirActionPerformed
        inserirPac();
        popularTbPac();
    }//GEN-LAST:event_btPacInserirActionPerformed

    private void btDelPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDelPacActionPerformed
        deletarPaciente();
        popularTbPac();
    }//GEN-LAST:event_btDelPacActionPerformed

    private void btAltPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAltPacActionPerformed
        alterarPaciente();
        popularTbPac();
    }//GEN-LAST:event_btAltPacActionPerformed

    private void brConsPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brConsPacActionPerformed
        consultarPaciente();
    }//GEN-LAST:event_brConsPacActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btLimparActionPerformed

    private void tbPacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPacMouseClicked
        selectTbPac();
    }//GEN-LAST:event_tbPacMouseClicked
   
    public void selectTbPac(){
        String valLin = "";
        
        int posLin = tbPac.getSelectedRow();
        
        for(int col = 0; col < tbPac.getColumnCount(); col++){
            valLin += tbPac.getModel().getValueAt(posLin, col).toString();
            
            if(col+1< tbPac.getColumnCount()){
                valLin += " - ";
            }
        }
        
        JOptionPane.showMessageDialog(
                null,
                "Valor da linha "+posLin+ " é "+valLin,
                "Saida de Dados",
                JOptionPane.INFORMATION_MESSAGE
        );
        
    }
    
        public void popularTbPac(){
        DefaultTableModel modelo = (DefaultTableModel) tbPac.getModel();
        
        int posLin = 0;
        modelo.setRowCount(posLin);
        
        for(Paciente pac: gp.getBdPac()){
            modelo.insertRow(posLin, new Object[]{pac.getNome(), pac.getCpf(),
                pac.getQuarto(),pac.getIdade(),pac.getTipoSang(),pac.getSexo()});
            posLin++;
        }
    }
    
    public void consultarPaciente(){
        pac1 = new Paciente();
        pac1.setCpf(Integer.parseInt(cxPacCpf.getText()));
        
        pac1 = gp.consPacCpf(pac1);
        
        if(pac1 != null) {
            cxPacCpf.setText(Integer.toString(pac1.getCpf()));
            cxPacQuarto.setText(Integer.toString(pac1.getQuarto()));
            cxPacIdade.setText(Integer.toString(pac1.getIdade()));
            cxPacNome.setText(pac1.getNome());
            cxPacTipoSang.setText(pac1.getTipoSang());
            cxPacSexo.setText(pac1.getSexo());
            
            JOptionPane.showMessageDialog(
                    null,
                    "Paciente encontrado, Verifique os dados",
                    "Consulta de Pacientes",
                    JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                null,
                "Paciente nao encontrado",
                "Consulta de Pacientes",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    public void alterarPaciente(){
        pac1 = new Paciente();
        pac1.setCpf(Integer.parseInt(cxPacCpf.getText()));
        pac1 = gp.atualizaPacCpf(pac1);
        
        if(pac1 != null){
            cxPacQuarto.setText(Integer.toString(pac1.getQuarto()));
            cxPacCpf.setText(Integer.toString(pac1.getCpf()));
            cxPacIdade.setText(Integer.toString(pac1.getIdade()));
            cxPacNome.setText(pac1.getNome());
            cxPacTipoSang.setText(pac1.getTipoSang());
            cxPacSexo.setText(pac1.getSexo());
            JOptionPane.showMessageDialog(
                null,
                "Paciente alterado\n Verfique os dados",
                "Alteração de Paciente",
                JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                null,
                "ERRO!\n Cpf inexistente",
                "Alteração de Paciente",
                JOptionPane.ERROR_MESSAGE
            );  
        }
        limpar();
    }
    
    public void deletarPaciente() {
        pac1 = new Paciente();
        pac1.setCpf(Integer.parseInt(cxPacCpf.getText()));
        pac1 = gp.delPacCpf(pac1);
        
        if(pac1 == null) {
            JOptionPane.showMessageDialog(
                null,
                "Paciente deletado com sucesso",
                "Exclusão de Paciente",
                1   
                );
        } else {
            JOptionPane.showMessageDialog(
                null,
                "Erro, este paciente não existe",
                "Exclusão de Paciente",
                3   
                );
        }
        limpar();
    }
    
    public void inserirPac(){
        pac1 = new Paciente();
        try{
            pac1.setNome(cxPacNome.getText());
            pac1.setSexo(cxPacSexo.getText());
            pac1.setTipoSang(cxPacTipoSang.getText());
            pac1.setCpf(Integer.parseInt(cxPacCpf.getText()));
            pac1.setIdade(Integer.parseInt(cxPacIdade.getText()));
            pac1.setQuarto(Integer.parseInt(cxPacQuarto.getText()));
            pac1 = gp.insPac(pac1);
            if(pac1 != null) {
                JOptionPane.showMessageDialog(
                    null,
                    "Paciente cadastrado com sucesso",
                    "Cadastro de Paciente",
                    1   
                );
            } else {
                JOptionPane.showMessageDialog(
                    null,
                    "Erro ao cadastrar Paciente, Dados repetidos",
                    "Cadastro de Paciente",
                    JOptionPane.ERROR_MESSAGE   
                );
            }    
        }catch(TipoSangException tse) {      
        }
        limpar();
        
    }
    
    public void limpar(){
        cxPacCpf.setText("");
        cxPacNome.setText("");
        cxPacTipoSang.setText("");
        cxPacQuarto.setText("");
        cxPacSexo.setText("");
        cxPacIdade.setText("");
        cxPacNome.requestFocus();
    }
    
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brConsPac;
    private javax.swing.JButton btAltPac;
    private javax.swing.JButton btDelPac;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btPacInserir;
    private javax.swing.JTextField cxPacCpf;
    private javax.swing.JTextField cxPacIdade;
    private javax.swing.JTextField cxPacNome;
    private javax.swing.JTextField cxPacQuarto;
    private javax.swing.JTextField cxPacSexo;
    private javax.swing.JTextField cxPacTipoSang;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rotPacCpf;
    private javax.swing.JLabel rotPacIdade;
    private javax.swing.JLabel rotPacNome;
    private javax.swing.JLabel rotPacQuarto;
    private javax.swing.JLabel rotPacSexo;
    private javax.swing.JLabel rotPacTipoSang;
    private javax.swing.JTable tbPac;
    // End of variables declaration//GEN-END:variables
}
